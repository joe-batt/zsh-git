#!/bin/zsh
# joe prompt theme
GITDIR=${GITDIR:-~/git}
ZSH_GIT_DIR=$GITDIT/zsh-git/

prompt_joe_help () {
  cat <<'EOF'
  General Look

  Non-root users:
  [24:00:00] user@host /path	[jobs: 1]
   %

  root:
  [24:00:00] host /path   	 [jobs: 1]
   %
  
  This prompt is color-scheme-able.  You can invoke it thus:

  prompt joe [<color1> [<color2> [<color3> [<color4> [<color5>]]]]]
  	color1: user@host (non-root user)
	color2: [24:00:00] (time)
	color3: /path/ (pwd)
	color4: [jobs: 1] (jobcount in right prompt)
	color5: host (like user@host but for root)

EOF
}

prompt_joe_setup () {
	setopt prompt_subst
	local -A col

	source $ZSH_GIT_DIR/git/init_git_prompt.sh

	col['user']=${1:-'red'}
	col['time']=${2:-'cyan'}
	col['pwd']=${3:-'blue'}
	col['jobs']=${4:-'green'}
	col['root']=${5:-'magenta'}
	
	local userstr
	local usercol
	if [ "$USER" = 'root' ]
	then
	  userstr="%F{$col['root']}%m"
	  usercol=$col['root']
	else
	  userstr="%F{$col['user']}%n@%m"
	  usercol=$col['user']
	fi

	# main prompt
	PROMPT="%F{$col['time']}[%*] $userstr%b%B"'$(prompt_git_info)'"%B%F{$col['pwd']} %~$prompt_newline %% %b%k%f"

	# sub prompt (e.g. "for> ")
	PROMPT2="%F{$usercol}%_%F{$col['pwd']}> %b%k%f"

	# right prompt, shows number jobs and :( if the last exit status was not 0
	RPROMPT="%(?..%B:(%b) %B%F{$col['jobs']}%1(j.[jobs: %j]%b"
}

prompt_joe_setup "$@"
